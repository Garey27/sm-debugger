name: CMake

on: [push, pull_request]

jobs:
  build_linux:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2    
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Install dep packets
      working-directory: ${{github.workspace}}
      run: |
            sudo add-apt-repository 'deb http://mirror.yandex.ru/ubuntu/ hirsute main universe' -y
            #sudo apt-get update
            sudo apt-get --assume-yes install curl zip unzip tar pkg-config gcc-11-multilib g++-11-multilib

    - name: Install vcpkg packets
      working-directory: ${{github.workspace}}
      run: |
            cp cmake/x86-linux-sm.cmake dep/vcpkg/triplets/x86-linux-sm.cmake
            ./dep/vcpkg/bootstrap-vcpkg.sh -musl
            ./dep/vcpkg/vcpkg install --triplet x86-linux-sm --debug


    - name: Configure CMake
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run:  |
            rm -rf build 
            cmake -B build -G Ninja -DCMAKE_TOOLCHAIN_FILE="./dep/vcpkg/scripts/buildsystems/vcpkg.cmake"  -DVCPKG_TARGET_TRIPLET=x86-linux-sm
            cmake --build build -j 
            tree .

    - name: Deploy artifacts
      uses: actions/upload-artifact@v2
      with:
        name: linux
        path: ${{github.workspace}}/build/sm_debugger.ext.so
          
  build_windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Install ninja
      run: choco install ninja      
      
    - name: setup devcmd
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x86
      
    - name: Install vcpkg packets
      working-directory: ${{github.workspace}}
      run: |
           .\dep\vcpkg\bootstrap-vcpkg.bat
           .\dep\vcpkg\vcpkg install --triplet x86-windows-static

    - name: Configure CMake
      working-directory: ${{github.workspace}}
      run: cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE="./dep/vcpkg/scripts/buildsystems/vcpkg.cmake"  -DVCPKG_TARGET_TRIPLET=x86-windows-static

    - name: Build
      working-directory: ${{github.workspace}}
      run: |
            cmake --build build --config Release --parallel
            tree ${{github.workspace}}
              
    - name: Deploy artifacts
      uses: actions/upload-artifact@v2
      with:
        name: windows
        path: ${{github.workspace}}/build/sm_debugger.ext.dll
  publish:
    name: 'Publish'
    runs-on: ubuntu-latest
    needs: [build_windows, build_linux]  
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v2        
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Deploying linux artifacts
        uses: actions/download-artifact@v2
        with:
          name: linux

      - name: Deploying windows artifacts
        uses: actions/download-artifact@v2
        with:
          name: windows
      
      - name: Archive artifacts
        run: |
          mkdir -p addons/sourcemod/extensions
          cp sm_debugger.ext.dll sm_debugger.ext.so addons/sourcemod/extensions
          touch addons/sourcemod/extensions/sm_debugger.autoload
          7z a -tzip sm_debugger-bin-${RELEASE_VERSION}.zip addons
        
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: sm_debugger-bin-*.zip
